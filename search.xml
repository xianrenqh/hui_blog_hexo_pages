<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>MySQL常用语句</title>
      <link href="/posts/adb47c67.html"/>
      <url>/posts/adb47c67.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.nlark.com/yuque/0/2022/png/27022430/1649645235333-50c0c21c-f619-40d2-a2cc-04e39d484716.png#clientId=u78daabba-49db-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=503&id=u9de5a5e2&margin=%5Bobject%20Object%5D&name=image.png&originHeight=555&originWidth=900&originalType=binary%E2%88%B6=1&rotation=0&showTitle=false&size=116531&status=done&style=none&taskId=uff38ef90-5ac3-4ff7-ad55-dfe5c18811b&title=&width=815.0943689560213" alt="image.png"></p><h2 id="常用的语句"><a href="#常用的语句" class="headerlink" title="常用的语句"></a>常用的语句</h2><h3 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h3><blockquote><p>select * from bbs where id&#x3D;1;</p></blockquote><h3 id="增加"><a href="#增加" class="headerlink" title="增加"></a>增加</h3><blockquote><p>insert into bbs (name,data_year) values (“jack”,”1993-10-01”);</p></blockquote><h3 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h3><blockquote><p>update bbs set name&#x3D;”tom”,sex&#x3D;1,age&#x3D;18 where name&#x3D;”jack”;</p></blockquote><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><blockquote><p>delete form bbs where id&#x3D;2;</p></blockquote><h2 id="更多语句"><a href="#更多语句" class="headerlink" title="更多语句"></a>更多语句</h2><h3 id="进入数据库："><a href="#进入数据库：" class="headerlink" title="进入数据库："></a>进入数据库：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql <span class="operator">-</span>u root <span class="operator">-</span>p</span><br><span class="line">mysql <span class="operator">-</span>h localhost <span class="operator">-</span>u root <span class="operator">-</span>p database_name</span><br></pre></td></tr></table></figure><h3 id="列出数据库："><a href="#列出数据库：" class="headerlink" title="列出数据库："></a>列出数据库：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> databases;</span><br></pre></td></tr></table></figure><h3 id="选择数据库："><a href="#选择数据库：" class="headerlink" title="选择数据库："></a>选择数据库：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use databases_name;</span><br></pre></td></tr></table></figure><h3 id="列出数据表："><a href="#列出数据表：" class="headerlink" title="列出数据表："></a>列出数据表：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> tables;</span><br></pre></td></tr></table></figure><h3 id="显示表格列的属性："><a href="#显示表格列的属性：" class="headerlink" title="显示表格列的属性："></a>显示表格列的属性：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> columns <span class="keyword">from</span> table_name;</span><br><span class="line"><span class="keyword">describe</span> table_name;</span><br></pre></td></tr></table></figure><h3 id="导出整个数据库："><a href="#导出整个数据库：" class="headerlink" title="导出整个数据库："></a>导出整个数据库：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump <span class="operator">-</span>u user_name <span class="operator">-</span>p database_name <span class="operator">&gt;</span> <span class="operator">/</span>tmp<span class="operator">/</span>file_name</span><br></pre></td></tr></table></figure><blockquote><p>例如：mysqldump -u root -p test_db &gt; d:&#x2F;test_db.sql</p></blockquote><h3 id="导出一个表："><a href="#导出一个表：" class="headerlink" title="导出一个表："></a>导出一个表：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump <span class="operator">-</span>u user_name <span class="operator">-</span>p database_name table_name <span class="operator">&gt;</span> <span class="operator">/</span>tmp<span class="operator">/</span>file_name</span><br></pre></td></tr></table></figure><blockquote><p>例如：mysqldump -u root -p test_db table1 &gt; d:&#x2F;table1.sql</p></blockquote><h3 id="导出一个数据库结构："><a href="#导出一个数据库结构：" class="headerlink" title="导出一个数据库结构："></a>导出一个数据库结构：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump <span class="operator">-</span>u user_name <span class="operator">-</span>p <span class="operator">-</span>d <span class="comment">--add--table database_name &gt; file_name</span></span><br></pre></td></tr></table></figure><blockquote><p>例如：mysqldump -u root -p -d –add-drop-table test_db &gt; test_db.sql</p></blockquote><h3 id="导入数据库："><a href="#导入数据库：" class="headerlink" title="导入数据库："></a>导入数据库：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">source file_name;</span><br><span class="line"># 或者</span><br><span class="line">mysql <span class="operator">-</span>u user_name <span class="operator">-</span>p database_name <span class="operator">&lt;</span> file_name</span><br></pre></td></tr></table></figure><blockquote><p>例如：<br>source &#x2F;tmp&#x2F;bbs.sql；<br>source d:&#x2F;bbs.sql；<br>mysql -u root -p bbs &lt; “d:&#x2F;bbs.sql”<br>mysql -u root -p bbs &lt; “&#x2F;tmp&#x2F;bbs.sql”</p></blockquote><h3 id="将文本文件导入数据表中（excel-与之相同）"><a href="#将文本文件导入数据表中（excel-与之相同）" class="headerlink" title="将文本文件导入数据表中（excel 与之相同）"></a>将文本文件导入数据表中（excel 与之相同）</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">load data infile &quot;tables.txt&quot; <span class="keyword">into</span> <span class="keyword">table</span> table_name;</span><br></pre></td></tr></table></figure><blockquote><p>例如：<br>load data infile “&#x2F;tmp&#x2F;bbs.txt” into table bbs；<br>load data infile “&#x2F;tmp&#x2F;bbs.xls” into table bbs；<br>load data infile “d:&#x2F;bbs.txt” into table bbs；<br>load data infile “d:&#x2F;bbs.xls” into table bbs；</p></blockquote><h3 id="将数据表导出为文本文件（excel-与之相同）"><a href="#将数据表导出为文本文件（excel-与之相同）" class="headerlink" title="将数据表导出为文本文件（excel 与之相同）"></a>将数据表导出为文本文件（excel 与之相同）</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">into</span> outfile &quot;path_file_name&quot; <span class="keyword">from</span> table_name;</span><br></pre></td></tr></table></figure><blockquote><p>例如：<br>select _ into outfile “&#x2F;tmp&#x2F;bbs.txt” from bbs；<br>select _ into outfile “&#x2F;tmp&#x2F;bbs.xls” from bbs where id&#x3D;1;<br>select _ into outfile “d:&#x2F;bbs.txt” from bbs;<br>select _ into outfile “d:&#x2F;bbs.xls” from bbs where id&#x3D;1;</p></blockquote><h3 id="创建数据库时先判断数据库是否存在："><a href="#创建数据库时先判断数据库是否存在：" class="headerlink" title="创建数据库时先判断数据库是否存在："></a>创建数据库时先判断数据库是否存在：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> database if <span class="keyword">not</span> <span class="keyword">exists</span> database_name;</span><br></pre></td></tr></table></figure><blockquote><p>例如：create database if not exists bbs</p></blockquote><h3 id="创建数据库："><a href="#创建数据库：" class="headerlink" title="创建数据库："></a>创建数据库：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> database database_name;</span><br></pre></td></tr></table></figure><blockquote><p>例如：create database bbs;</p></blockquote><h3 id="删除数据库："><a href="#删除数据库：" class="headerlink" title="删除数据库："></a>删除数据库：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> database database_name;</span><br></pre></td></tr></table></figure><blockquote><p>例如：drop database bbs;</p></blockquote><h3 id="创建数据表："><a href="#创建数据表：" class="headerlink" title="创建数据表："></a>创建数据表：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">table</span> <span class="operator">&lt;</span>table_name<span class="operator">&gt;</span> ( <span class="operator">&lt;</span><span class="keyword">column</span> <span class="number">1</span> name<span class="operator">&gt;</span> <span class="operator">&lt;</span>col. <span class="number">1</span> type<span class="operator">&gt;</span> <span class="operator">&lt;</span>col. <span class="number">1</span> details<span class="operator">&gt;</span>,<span class="operator">&lt;</span><span class="keyword">column</span> <span class="number">2</span> name<span class="operator">&gt;</span> <span class="operator">&lt;</span>col. <span class="number">2</span> type<span class="operator">&gt;</span> <span class="operator">&lt;</span>col. <span class="number">2</span> details<span class="operator">&gt;</span>, ...);</span><br></pre></td></tr></table></figure><blockquote><p>例如：create table (id int not null auto_increment primary key,name char(16) not null default “jack”,date_year date not null);</p></blockquote><h3 id="删除数据表中数据："><a href="#删除数据表中数据：" class="headerlink" title="删除数据表中数据："></a>删除数据表中数据：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> table_name;</span><br></pre></td></tr></table></figure><blockquote><p>例如：<br>delete from bbs;<br>delete from bbs where id&#x3D;2;</p></blockquote><h3 id="删除数据库中的数据表："><a href="#删除数据库中的数据表：" class="headerlink" title="删除数据库中的数据表："></a>删除数据库中的数据表：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> table_name;</span><br></pre></td></tr></table></figure><blockquote><p>例如：<br>drop table test_db;<br>rm -f database_name&#x2F;table_name._ (linux 下）<br>例如：<br>rm -rf bbs&#x2F;accp._</p></blockquote><h3 id="向数据库中添加数据："><a href="#向数据库中添加数据：" class="headerlink" title="向数据库中添加数据："></a>向数据库中添加数据：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> table_name <span class="keyword">set</span> column_name1<span class="operator">=</span>value1,column_name2<span class="operator">=</span>value2;</span><br></pre></td></tr></table></figure><blockquote><p>例如：insert into bbs set name&#x3D;”jack”,date_year&#x3D;”1993-10-01”;</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> table_name <span class="keyword">values</span> (column1,column2,...);</span><br></pre></td></tr></table></figure><blockquote><p>例如：insert into bbs (“2”,”jack”,”1993-10-02”)</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> table_name (column_name1,column_name2,...) <span class="keyword">values</span> (value1,value2);</span><br></pre></td></tr></table></figure><blockquote><p>例如：insert into bbs (name,data_year) values (“jack”,”1993-10-01”);</p></blockquote><h3 id="查询数据表中的数据："><a href="#查询数据表中的数据：" class="headerlink" title="查询数据表中的数据："></a>查询数据表中的数据：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> table_name;</span><br></pre></td></tr></table></figure><blockquote><p>例如：select * from bbs where id&#x3D;1;</p></blockquote><h3 id="修改数据表中的数据："><a href="#修改数据表中的数据：" class="headerlink" title="修改数据表中的数据："></a>修改数据表中的数据：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> table_name <span class="keyword">set</span> col_name<span class="operator">=</span>new_value <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span>;</span><br></pre></td></tr></table></figure><blockquote><p>例如：update bbs set name&#x3D;”tom”,age&#x3D;18 where name&#x3D;”jack”;</p></blockquote><h3 id="增加一个字段："><a href="#增加一个字段：" class="headerlink" title="增加一个字段："></a>增加一个字段：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> table_name <span class="keyword">add</span> <span class="keyword">column</span> field_name datatype <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">default</span> &quot;1&quot;;</span><br></pre></td></tr></table></figure><blockquote><p>例如：alter table bbs add column tel char(16) not null;</p></blockquote><h3 id="增加多个字段：-column-可省略不写）"><a href="#增加多个字段：-column-可省略不写）" class="headerlink" title="增加多个字段：(column 可省略不写）"></a>增加多个字段：(column 可省略不写）</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> table_name <span class="keyword">add</span> <span class="keyword">column</span> filed_name1 datatype,<span class="keyword">add</span> <span class="keyword">column</span> filed_name2 datatype;</span><br></pre></td></tr></table></figure><blockquote><p>例如：alter table bbs add column tel char(16) not null,add column address text;</p></blockquote><h3 id="删除一个字段："><a href="#删除一个字段：" class="headerlink" title="删除一个字段："></a>删除一个字段：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> table_name <span class="keyword">drop</span> field_name;</span><br></pre></td></tr></table></figure><blockquote><p>例如：alter table bbs drop tel;</p></blockquote><h3 id="修改字段的数据类型："><a href="#修改字段的数据类型：" class="headerlink" title="修改字段的数据类型："></a>修改字段的数据类型：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> <span class="keyword">alter</span> <span class="keyword">table</span> table_name modify id <span class="type">int</span> unsigned;</span><br><span class="line">#修改列id的类型为<span class="type">int</span> unsigned</span><br><span class="line"><span class="number">2.</span> <span class="keyword">alter</span> <span class="keyword">table</span> table_name change id sid <span class="type">int</span> unsigned;</span><br><span class="line">#修改列id的名字为sid，而且把属性修改为<span class="type">int</span> unsigned</span><br></pre></td></tr></table></figure><h3 id="修改一个字段的默认值："><a href="#修改一个字段的默认值：" class="headerlink" title="修改一个字段的默认值："></a>修改一个字段的默认值：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> table_name modify column_name datatype <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">default</span> &quot;&quot;;</span><br></pre></td></tr></table></figure><blockquote><p>例如：alter table test_db modify name char(16) default not null “yourname”;</p></blockquote><h3 id="对表重新命名："><a href="#对表重新命名：" class="headerlink" title="对表重新命名："></a>对表重新命名：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> table_name rename <span class="keyword">as</span> new_table_name;</span><br></pre></td></tr></table></figure><blockquote><p>例如：alter table bbs rename as bbs_table;</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rename <span class="keyword">table</span> old_table_name <span class="keyword">to</span> new_table_name;</span><br></pre></td></tr></table></figure><blockquote><p>例如：rename table test_db to accp;</p></blockquote><h3 id="从已经有的表中复制表的结构："><a href="#从已经有的表中复制表的结构：" class="headerlink" title="从已经有的表中复制表的结构："></a>从已经有的表中复制表的结构：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> table2 <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> table1 <span class="keyword">where</span> <span class="number">1</span><span class="operator">&lt;&gt;</span><span class="number">1</span>;</span><br></pre></td></tr></table></figure><blockquote><p>例如：create table test_db select * from accp where 1&lt;&gt;1;</p></blockquote><h3 id="查询时间："><a href="#查询时间：" class="headerlink" title="查询时间："></a>查询时间：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> now();</span><br></pre></td></tr></table></figure><h3 id="查询当前用户："><a href="#查询当前用户：" class="headerlink" title="查询当前用户："></a>查询当前用户：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">user</span>();</span><br></pre></td></tr></table></figure><h3 id="查询数据库版本："><a href="#查询数据库版本：" class="headerlink" title="查询数据库版本："></a>查询数据库版本：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select version();</span><br></pre></td></tr></table></figure><h3 id="创建索引："><a href="#创建索引：" class="headerlink" title="创建索引："></a>创建索引：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> table1 <span class="keyword">add</span> index ind_id(id);</span><br><span class="line"><span class="keyword">create</span> index ind_id <span class="keyword">on</span> table1(id);</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">unique</span> index ind_id <span class="keyword">on</span> table1(id);<span class="operator">/</span><span class="operator">/</span>建立唯一性索引</span><br></pre></td></tr></table></figure><h3 id="删除索引："><a href="#删除索引：" class="headerlink" title="删除索引："></a>删除索引：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> index idx_id <span class="keyword">on</span> table1;</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> table1 <span class="keyword">drop</span> index ind_id;</span><br></pre></td></tr></table></figure><h3 id="联合字符或者多个列（将-id-与”-”和列-name-和”-x3D-”连接）"><a href="#联合字符或者多个列（将-id-与”-”和列-name-和”-x3D-”连接）" class="headerlink" title="联合字符或者多个列（将 id 与”:”和列 name 和”&#x3D;”连接）"></a>联合字符或者多个列（将 id 与”:”和列 name 和”&#x3D;”连接）</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> concat(id，<span class="string">&#x27;:&#x27;</span>,name,<span class="string">&#x27;=&#x27;</span>) <span class="keyword">from</span> <span class="keyword">table</span>;</span><br></pre></td></tr></table></figure><h3 id="limit（选出-10-到-20-条）"><a href="#limit（选出-10-到-20-条）" class="headerlink" title="limit（选出 10 到 20 条）"></a>limit（选出 10 到 20 条）</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> bbs <span class="keyword">order</span> <span class="keyword">by</span> id limit <span class="number">9</span>,<span class="number">10</span>;</span><br></pre></td></tr></table></figure><blockquote><p>（从查询结果中列出第几到几条的记录）</p></blockquote><h3 id="增加一个管理员账号："><a href="#增加一个管理员账号：" class="headerlink" title="增加一个管理员账号："></a>增加一个管理员账号：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">to</span> <span class="keyword">user</span><span class="variable">@localhost</span> identified <span class="keyword">by</span> &quot;password&quot;;</span><br></pre></td></tr></table></figure><h3 id="创建表是先判断表是否存在"><a href="#创建表是先判断表是否存在" class="headerlink" title="创建表是先判断表是否存在"></a>创建表是先判断表是否存在</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> if <span class="keyword">not</span> <span class="keyword">exists</span> students(……);</span><br></pre></td></tr></table></figure><h3 id="复制表："><a href="#复制表：" class="headerlink" title="复制表："></a>复制表：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> table2 <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> table1;</span><br></pre></td></tr></table></figure><blockquote><p>例如：create table test_db select * from accp;</p></blockquote><h3 id="授于用户远程访问-mysql-的权限"><a href="#授于用户远程访问-mysql-的权限" class="headerlink" title="授于用户远程访问 mysql 的权限"></a>授于用户远程访问 mysql 的权限</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> privileges <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">to</span> &quot;root&quot;@&quot;%&quot; identified <span class="keyword">by</span> &quot;password&quot; <span class="keyword">with</span> <span class="keyword">grant</span> option;</span><br><span class="line"># 或者是修改mysql数据库中的<span class="keyword">user</span>表中的host字段</span><br><span class="line">use mysql;</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">user</span>,host <span class="keyword">from</span> <span class="keyword">user</span>;</span><br><span class="line"><span class="keyword">update</span> <span class="keyword">user</span> <span class="keyword">set</span> host<span class="operator">=</span>&quot;%&quot; <span class="keyword">where</span> <span class="keyword">user</span><span class="operator">=</span>&quot;user_name&quot;;</span><br></pre></td></tr></table></figure><h3 id="查看当前状态"><a href="#查看当前状态" class="headerlink" title="查看当前状态"></a>查看当前状态</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> status;</span><br></pre></td></tr></table></figure><h3 id="查看当前连接的用户"><a href="#查看当前连接的用户" class="headerlink" title="查看当前连接的用户"></a>查看当前连接的用户</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> processlist;</span><br></pre></td></tr></table></figure><blockquote><p>（如果是 root 用户，则查看全部的线程，得到的用户连接数同 show status;里的 Threads_connected 值是相同的）!</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 学无止境 </category>
          
          <category> Msql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> json </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php json 处理gbk转码utf-8问题（ json_encode转换数组，值为null）</title>
      <link href="/posts/e8f88cd9.html"/>
      <url>/posts/e8f88cd9.html</url>
      
        <content type="html"><![CDATA[<p>遇到个很幼稚的问题，用 json_encode 把数组转换为 json 时，发现转化的值为 null。怎么回事呢？查找手册：发现了下面的话：<br>该函数只能接受 UTF-8 编码的数据（译注：指字符&#x2F;字符串类型的数据）<br>原来数组中有中文，需要转码哦，写个转换字符编码的函数吧：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">encodeConvert</span>(<span class="params"><span class="variable">$str</span>, <span class="variable">$fromCode</span>, <span class="variable">$toCode</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">strtoupper</span>(<span class="variable">$toCode</span>) == <span class="title function_ invoke__">strtoupper</span>(<span class="variable">$fromCode</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$str</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">is_string</span>(<span class="variable">$str</span>)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">function_exists</span>(<span class="string">&#x27;mb_convert_encoding&#x27;</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_ invoke__">mb_convert_encoding</span>(<span class="variable">$str</span>, <span class="variable">$toCode</span>, <span class="variable">$fromCode</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_ invoke__">iconv</span>(<span class="variable">$fromCode</span>, <span class="variable">$toCode</span>, <span class="variable">$str</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">elseif</span> (<span class="title function_ invoke__">is_array</span>(<span class="variable">$str</span>)) &#123;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$str</span> <span class="keyword">as</span> <span class="variable">$k</span> =&gt; <span class="variable">$v</span>) &#123;</span><br><span class="line">            <span class="variable">$str</span>[<span class="variable">$k</span>] = <span class="title function_ invoke__">encodeConvert</span>(<span class="variable">$v</span>, <span class="variable">$fromCode</span>, <span class="variable">$toCode</span>);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$str</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$str</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对于数组，通过下面方式 json_encode 调用，一切 ok ~~~</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$json_api</span>=<span class="title function_ invoke__">json_encode</span>(<span class="title function_ invoke__">encodeConvert</span>(<span class="variable">$json_api</span>,<span class="string">&#x27;gb2312&#x27;</span>,<span class="string">&#x27;utf-8&#x27;</span>));</span><br><span class="line"><span class="variable">$json_api</span>=<span class="title function_ invoke__">json_decode</span>(<span class="title function_ invoke__">json_decode</span>(<span class="variable">$json_api</span>));</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学无止境 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> json </tag>
            
            <tag> 转码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>宝塔WebHook拉取git命令</title>
      <link href="/posts/9bca3d9a.html"/>
      <url>/posts/9bca3d9a.html</url>
      
        <content type="html"><![CDATA[<p>在宝塔控制面板-》软件商店 找到 webhook，点击安装并编辑如下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">echo &quot;&quot;</span><br><span class="line">#输出当前时间</span><br><span class="line">date --date=&#x27;0 days ago&#x27; &quot;+%Y-%m-%d %H:%M:%S&quot;</span><br><span class="line">echo &quot;Start&quot;</span><br><span class="line">#判断宝塔WebHook参数是否存在</span><br><span class="line">if [ ! -n &quot;$1&quot; ]; then</span><br><span class="line">                echo &quot;param参数错误&quot;</span><br><span class="line">        echo &quot;End&quot;</span><br><span class="line">        exit</span><br><span class="line">fi</span><br><span class="line">#git项目路径</span><br><span class="line">gitPath=&quot;/www/wwwroot/$1&quot;</span><br><span class="line">#git 网址</span><br><span class="line">gitHttp=&quot;git@github.com:xianrenqh/hui_blog_hexo_pages.git&quot;</span><br><span class="line"></span><br><span class="line">echo &quot;Web站点路径：$gitPath&quot;</span><br><span class="line"></span><br><span class="line">#判断项目路径是否存在</span><br><span class="line">if [ -d &quot;$gitPath&quot; ]; then</span><br><span class="line">        cd $gitPath</span><br><span class="line">        #判断是否存在git目录</span><br><span class="line">        if [ ! -d &quot;.git&quot; ]; then</span><br><span class="line">                echo &quot;在该目录下克隆 git&quot;</span><br><span class="line">                echo &quot;$gitHttp&quot;</span><br><span class="line">                git clone $gitHttp gittemp</span><br><span class="line">                mv gittemp/.git .</span><br><span class="line">rm -rf gittemp</span><br><span class="line">        fi</span><br><span class="line">        #拉取最新的项目文件</span><br><span class="line">        git reset --hard origin/master</span><br><span class="line">        git pull</span><br><span class="line">        #设置目录权限</span><br><span class="line">        chown -R www:www $gitPath</span><br><span class="line">        echo &quot;End&quot;</span><br><span class="line">        exit</span><br><span class="line">else</span><br><span class="line">        echo &quot;该项目路径不存在&quot;</span><br><span class="line">        echo &quot;End&quot;</span><br><span class="line">        exit</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学无止境 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> webhook </tag>
            
            <tag> 宝塔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo使用ButterFly主题</title>
      <link href="/posts/6220e42c.html"/>
      <url>/posts/6220e42c.html</url>
      
        <content type="html"><![CDATA[<h1 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h1><p>参考主题官网：<br><a href="https://butterfly.js.org/posts/21cfbf15#%E5%AE%89%E8%A3%9D">https://butterfly.js.org/posts/21cfbf15</a></p><h2 id="github-安装"><a href="#github-安装" class="headerlink" title="github 安装"></a>github 安装</h2><p>稳定版【建议】</p><p>在你的 Hexo 根目录里</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone <span class="literal">-b</span> master https://github.com/jerryc127/hexo<span class="literal">-theme-butterfly</span>.git themes/butterfly</span><br></pre></td></tr></table></figure><p>测试版可能存在 bug，追求稳定的请安装稳定版</p><p>如果想要安装比较新的 dev 分支，可以</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone <span class="literal">-b</span> dev https://github.com/jerryc127/hexo<span class="literal">-theme-butterfly</span>.git themes/butterfly</span><br></pre></td></tr></table></figure><blockquote><p>升级方法：在主题目录下，运行 git pull</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 学无止境 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 博客 </tag>
            
            <tag> 主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Hexo搭建博客</title>
      <link href="/posts/eb656981.html"/>
      <url>/posts/eb656981.html</url>
      
        <content type="html"><![CDATA[<h1 id="一、安装-node-js"><a href="#一、安装-node-js" class="headerlink" title="一、安装 node.js"></a>一、安装 node.js</h1><ul><li><a href="https://nodejs.org/en/">node.js 官方下载地址</a></li><li>从上面的链接下载 node.js，并安装。<ul><li>注意：官方链接可能需要<strong>翻墙</strong></li><li>注意：我的操作系统是<strong>Windows 7 (64bit)</strong></li></ul></li></ul><h2 id="设置-npm-淘宝镜像站"><a href="#设置-npm-淘宝镜像站" class="headerlink" title="设置 npm 淘宝镜像站"></a>设置 npm 淘宝镜像站</h2><ul><li>npm 默认的源的下载速度可能很慢，建议使用淘宝镜像替换。</li><li>执行下面的命令，将 npm 的源设置成淘宝镜像站。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry &quot;https://registry.npm.taobao.org&quot;</span><br></pre></td></tr></table></figure><h1 id="二、安装-hexo"><a href="#二、安装-hexo" class="headerlink" title="二、安装 hexo"></a>二、安装 hexo</h1><ul><li>执行以下命令安装 hexo。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># 安装hexo</span><br><span class="line">npm install hexo-cli g</span><br><span class="line"># 初始化博客文件夹</span><br><span class="line">hexo init blog</span><br><span class="line"># 切换到该路径</span><br><span class="line">cd blog</span><br><span class="line"># 安装hexo的扩展插件</span><br><span class="line">npm install</span><br><span class="line"># 安装其它插件</span><br><span class="line">npm install hexo-server --save</span><br><span class="line">npm install hexo-admin --save</span><br><span class="line">npm install hexo-generator-archive --save</span><br><span class="line">npm install hexo-generator-feed --save</span><br><span class="line">npm install hexo-generator-search --save</span><br><span class="line">npm install hexo-generator-tag --save</span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">npm install hexo-generator-sitemap --save</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>初探 hexo<br>第一次使用 hexo，在本地创建服务器使用。</p><h1 id="生成静态页面"><a href="#生成静态页面" class="headerlink" title="生成静态页面"></a>生成静态页面</h1><p>hexo generate</p><h1 id="三、开启本地服务器"><a href="#三、开启本地服务器" class="headerlink" title="三、开启本地服务器"></a>三、开启本地服务器</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 生成静态页面</span><br><span class="line">hexo generate</span><br><span class="line"># 开启本地服务器</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>打开浏览器，地址栏中输入：<a href="http://localhost:4000/,%E5%BA%94%E8%AF%A5%E5%8F%AF%E4%BB%A5%E7%9C%8B%E8%A7%81%E5%88%9A%E5%88%9A%E5%88%9B%E5%BB%BA%E7%9A%84%E5%8D%9A%E5%AE%A2%E4%BA%86%E3%80%82">http://localhost:4000/,应该可以看见刚刚创建的博客了。</a><br>问题：为什么访问 <a href="http://localhost:4000/%EF%BC%8C%E6%97%A0%E5%8F%8D%E5%BA%94%EF%BC%9F">http://localhost:4000/，无反应？</a><br>解决方法：可能是由于端口问题引起的。使用 Ctrl+C 中断本地服务，使用命令 hexo s -p 5000 重新开启本地服务，访问<a href="http://localhost:5000/"><strong>http://localhost:5000/</strong></a>可以看到博客页面了。</p><h1 id="四、hexo-命令缩写"><a href="#四、hexo-命令缩写" class="headerlink" title="四、hexo 命令缩写"></a>四、hexo 命令缩写</h1><ul><li>hexo 支持命令缩写，如下所示。hexo g 等价于 hexo generate</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo g：hexo generate</span><br><span class="line">hexo c：hexo clean</span><br><span class="line">hexo s：hexo server</span><br><span class="line">hexo d：hexo deploy</span><br></pre></td></tr></table></figure><h1 id="hexo-组合命令"><a href="#hexo-组合命令" class="headerlink" title="hexo 组合命令"></a>hexo 组合命令</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 清除、生成、启动</span><br><span class="line">hexo clean &amp;&amp; hexo g -s</span><br><span class="line"># 清除、生成、部署</span><br><span class="line">hexo clean &amp;&amp; hexo g -d</span><br></pre></td></tr></table></figure><h1 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h1><h2 id="hexo-deploy-没有反应？"><a href="#hexo-deploy-没有反应？" class="headerlink" title="hexo deploy 没有反应？"></a>hexo deploy 没有反应？</h2><ul><li>修改配置文件：<strong>_config.yml</strong>时，冒号后面没加空格。</li></ul><h2 id="hexo-s-网站打不开？"><a href="#hexo-s-网站打不开？" class="headerlink" title="hexo s 网站打不开？"></a>hexo s 网站打不开？</h2><ul><li>端口占用，换个端口就好了。执行命令 hexo s -p 5000，并在浏览器地址栏输入 <a href="http://localhost:5000，回车访问。">http://localhost:5000，回车访问。</a></li></ul><h2 id="如何换主题？"><a href="#如何换主题？" class="headerlink" title="如何换主题？"></a>如何换主题？</h2><ul><li>将主题下载后，放到 themes 文件夹中即可。例如，下面命令安装 next 主题：git clone <a href="https://github.com/iissnan/hexo-theme-next">https://github.com/iissnan/hexo-theme-next</a> themes&#x2F;next。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 学无止境 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 博客 </tag>
            
            <tag> 安装 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>语雀+Hexo+serverless云函数自动同步</title>
      <link href="/posts/ec39ff9.html"/>
      <url>/posts/ec39ff9.html</url>
      
        <content type="html"><![CDATA[<h1 id="一、搭建-Hexo-博客"><a href="#一、搭建-Hexo-博客" class="headerlink" title="一、搭建 Hexo 博客"></a>一、搭建 Hexo 博客</h1><p>本文针对已经搭建好 hexo 博客的，如果没有搭好正常的 hexo 博客的可以去看另一篇博文，搭建很方便的。<br>使用 hexo 搭建博客地址：<br><a href="https://www.yuque.com/xianrenqh/kyeqhg/xo8csy">https://www.yuque.com/xianrenqh/kyeqhg/xo8csy</a></p><h1 id="二、Hexo-同步语雀内容"><a href="#二、Hexo-同步语雀内容" class="headerlink" title="二、Hexo 同步语雀内容"></a>二、Hexo 同步语雀内容</h1><p>用到了这个项目：</p><blockquote><p><a href="https://github.com/x-cold/yuque-hexo">https://github.com/x-cold/yuque-hexo</a></p></blockquote><blockquote><p>安装：npm i -g yuque-hexo</p></blockquote><p>然后把 package.json 的内容添加上下面这些：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;yuqueConfig&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;postPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;source/_posts&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;cachePath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;yuque.json&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;mdNameFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;slug&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;adapter&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;concurrency&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;baseUrl&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://www.yuque.com/api/v2&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;login&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hxfqg9&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;repo&quot;</span><span class="punctuation">:</span> <span class="string">&quot;web&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;token&quot;</span><span class="punctuation">:</span> <span class="string">&quot;语雀token&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;onlyPublished&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;onlyPublic&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;devDependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;yuque-hexo&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.6.0&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;hexo&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;4.2.1&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里需要说明：<br>baseurl 是固定的<br>login 和 repo 是如下图这样对应的，个人界面和团队界面都可以<br><img src="https://cdn.nlark.com/yuque/0/2022/png/27022430/1649396601747-fc1e332a-2b6a-4ad0-bf0b-85b45608f17b.png#clientId=udcfe64c5-982a-4&crop=0&crop=0&crop=1&crop=1&from=paste&id=u0d64e7b4&margin=%5Bobject%20Object%5D&name=image.png&originHeight=545&originWidth=1080&originalType=url%E2%88%B6=1&rotation=0&showTitle=false&size=189765&status=done&style=none&taskId=u57aea17f-fb57-435f-8a44-af6dbe6c1cc&title=" alt="image.png"></p><p>token 是在右上角头像 -&gt; 账户设置 -&gt; Token 添加的，权限的话只给读取就可以<br>ps.公开的知识库也要设置 Token。<br>接着，<br>在 “scripts” 中添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&quot;sync&quot;: &quot;yuque-hexo sync&quot;,</span><br><span class="line">&quot;clean:yuque&quot;: &quot;yuque-hexo clean&quot;,</span><br></pre></td></tr></table></figure><p>这样整体下来我的 package.json 内容如下（参考）：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo-site&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;private&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;build&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo generate&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;clean&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo clean&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;deploy&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo deploy&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;server&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo server&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;sync&quot;</span><span class="punctuation">:</span> <span class="string">&quot;yuque-hexo sync&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;clean:yuque&quot;</span><span class="punctuation">:</span> <span class="string">&quot;yuque-hexo clean&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;yuqueConfig&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;postPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;source/_posts&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;cachePath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;yuque.json&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;mdNameFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;slug&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;adapter&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;concurrency&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;baseUrl&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://www.yuque.com/api/v2&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;login&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hxfqg9&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;repo&quot;</span><span class="punctuation">:</span> <span class="string">&quot;web&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;token&quot;</span><span class="punctuation">:</span> <span class="string">&quot;语雀token&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;onlyPublished&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;onlyPublic&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;devDependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;yuque-hexo&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.6.0&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hexo&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;4.2.1&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;dependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;hexo&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.2.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-deployer-git&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.1.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-archive&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-baidu-sitemap&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.1.6&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-feed&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-index&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-json-content&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.2.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-searchdb&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.3.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-sitemap&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-tag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-renderer-ejs&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-renderer-marked&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-renderer-stylus&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.1.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-server&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-wordcount&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^6.0.1&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>这时候，在本地调试的时候使用命令：yuque-hexo sync 就会把语雀的文章给下载下来，下载到 \source_posts<br>（使用以上命令前先备份本地的_posts 文件夹下的 md 文章，使用语雀下载的时候会先清空此文件夹）<br>然后 hexo g &amp;&amp; hexo s 就可以访问 127.0.0.1:4000 本地看一下了<br>手动发布是 hexo g &amp;&amp; hexo d</p><h3 id="针对语雀图片无法正常显示的解决办法"><a href="#针对语雀图片无法正常显示的解决办法" class="headerlink" title="针对语雀图片无法正常显示的解决办法"></a>针对语雀图片无法正常显示的解决办法</h3><p>在主题的 layout 文件夹中的 post.ejs 文件中加上一句（不同主题加的位置不同）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot; /&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/27022430/1649404362200-7eafd317-d235-4af8-afe9-4f9c54d4dee2.png#clientId=u68da2bd8-69aa-4&crop=0&crop=0&crop=1&crop=1&from=paste&id=u4d9c66af&margin=%5Bobject%20Object%5D&name=image.png&originHeight=351&originWidth=841&originalType=url%E2%88%B6=1&rotation=0&showTitle=false&size=46710&status=done&style=none&taskId=ufd914241-d133-43ab-b845-e08191199df&title=" alt="image.png"></p><p>小灰灰用的是 butterFly 主题，加的位置在：<br>\themes\butterfly\layout\includes\head.pug 文件：<br>大概在第 40 行左右添加：<br>（PS：放在这个位置是因为百度统计的 referrer 问题。只能放在统计后面）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">meta(name=&quot;referrer&quot; content=&quot;no-referrer&quot;)</span><br></pre></td></tr></table></figure><p>如图：<br><img src="https://cdn.nlark.com/yuque/0/2022/png/27022430/1649641758436-1971a415-4efc-45ff-87b9-1e47f9617353.png#clientId=u6e1ca8df-731b-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=700&id=u651955ce&margin=%5Bobject%20Object%5D&name=image.png&originHeight=773&originWidth=1119&originalType=binary%E2%88%B6=1&rotation=0&showTitle=false&size=134271&status=done&style=none&taskId=u1edc2856-0d56-4f15-9454-c218fcf937a&title=&width=1013.4339987353198" alt="image.png"></p><h1 id="三、github-actions-自动更新"><a href="#三、github-actions-自动更新" class="headerlink" title="三、github actions 自动更新"></a><strong>三、github actions 自动更新</strong></h1><p>在 github 上创建一个私有仓库（因为会涉及到一些 token 啥的）仓库名字无所谓<strong>（用来存放 hexo 源码）</strong><br><strong>注意</strong>：在仓库里面再放一个仓库是没法把里面那个仓库 push 到 github 的，只会传一个空文件夹，导致后期博客成了空白页面，最简单粗暴的办法就是把你 git clone 的 hexo 主题里的 .git 文件夹给删掉<br>然后在 hexo 的目录下运行如下命令，把 hexo 的源码传到 github 远程仓库中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line">git add .</span><br><span class="line">git commit -m &quot;first commit&quot;</span><br><span class="line">git remote add origin https://github.com/yichen115/blog.git</span><br><span class="line">git push -u origin master</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>去 github 的 settings 创建一个 token （ps:个人中心的设置，非项目的设置）<br><img src="https://cdn.nlark.com/yuque/0/2022/png/27022430/1649396898326-2a09cbe8-9587-4f19-9f13-ead9e3bd6fc1.png#clientId=udcfe64c5-982a-4&crop=0&crop=0&crop=1&crop=1&from=paste&id=uac4e5e7e&margin=%5Bobject%20Object%5D&name=image.png&originHeight=390&originWidth=1080&originalType=url%E2%88%B6=1&rotation=0&showTitle=false&size=89765&status=done&style=none&taskId=uc2174048-c4a7-45e5-8b7e-a72c318831b&title=" alt="image.png"></p><p>只勾上这一个即可：<br><img src="https://cdn.nlark.com/yuque/0/2022/png/27022430/1649396909568-f0df156b-9310-4954-9350-da49c64404d2.png#clientId=udcfe64c5-982a-4&crop=0&crop=0&crop=1&crop=1&from=paste&id=u1e211b98&margin=%5Bobject%20Object%5D&name=image.png&originHeight=627&originWidth=746&originalType=url%E2%88%B6=1&rotation=0&showTitle=false&size=53298&status=done&style=none&taskId=ua795b964-947a-41ce-bafa-a59b4ecd46b&title=" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/27022430/1649396921676-0e84a878-d94d-44d7-bd5b-0d1490dd65c6.png#clientId=udcfe64c5-982a-4&crop=0&crop=0&crop=1&crop=1&from=paste&id=u4cbbdb00&margin=%5Bobject%20Object%5D&name=image.png&originHeight=445&originWidth=1015&originalType=url%E2%88%B6=1&rotation=0&showTitle=false&size=45407&status=done&style=none&taskId=u4adc989a-ec2a-4dcc-9a1d-66a0017e2b1&title=" alt="image.png"></p><p><strong>生成了 token 之后一定要记下来</strong>，再回来就没法看了<br>然后来到刚才创建的私有仓库的 settings<br><img src="https://cdn.nlark.com/yuque/0/2022/png/27022430/1649396944906-f483bf94-9454-4d5b-8fcb-5ad1d02e9003.png#clientId=udcfe64c5-982a-4&crop=0&crop=0&crop=1&crop=1&from=paste&id=u71d114fa&margin=%5Bobject%20Object%5D&name=image.png&originHeight=419&originWidth=1080&originalType=url%E2%88%B6=1&rotation=0&showTitle=false&size=91140&status=done&style=none&taskId=u2e8da352-5627-4745-98cb-0fad22bf7af&title=" alt="image.png"></p><p>添加三个 secret<br><strong>GH_REF</strong> 是你博客的仓库地址 github.com&#x2F;<strong>**</strong>&#x2F;<strong>**</strong>.github.io<br>注意去掉前面 https:&#x2F;&#x2F;<br><strong>GE_TOKEN</strong> 是刚才生成的 token<br>然后来到 actions，点击 set up a workflow yourself<br>**HEXO_DEPLOY_PRI **是新增的 ssh 密钥<br>在命令行中输入：</p><blockquote><p>ssh-keygen -t rsa -C “<a href="mailto:&#121;&#x6f;&#x75;&#x72;&#x5f;&#101;&#x6d;&#x61;&#105;&#x6c;&#x40;&#x65;&#x78;&#x61;&#x6d;&#x70;&#108;&#x65;&#46;&#99;&#111;&#109;">&#121;&#x6f;&#x75;&#x72;&#x5f;&#101;&#x6d;&#x61;&#105;&#x6c;&#x40;&#x65;&#x78;&#x61;&#x6d;&#x70;&#108;&#x65;&#46;&#99;&#111;&#109;</a>“</p></blockquote><p>备注：<br>同时生成的公钥，要放到 Hexo 生成 page 的项目的公钥下面<br>（只有密钥和公钥相互匹配，才能推送静态文件到公开的项目下（page 项目））</p><p>编辑内容如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Hexo</span> <span class="string">Deploy</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">workflow_dispatch:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">master</span></span><br><span class="line">  <span class="attr">schedule:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">cron:</span> <span class="string">&quot;0 21 * * 0&quot;</span> <span class="comment"># 每周日 UTC 时间 21:00, 北京时间周一凌晨5点</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span> <span class="string">source</span> <span class="comment"># 将仓库内master分支的内容下载到工作目录1</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span> <span class="comment"># 脚本来自 https://github.com/actions/checkout</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">ref:</span> <span class="string">master</span></span><br><span class="line">          <span class="attr">submodules:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Node</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/setup-node@v1</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">node-version:</span> <span class="string">&quot;14.x&quot;</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span> <span class="string">Submodules</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          auth_header=&quot;$(git config --local --get http.https://github.com/.extraheader)&quot;</span></span><br><span class="line"><span class="string">          git submodule sync --recursive</span></span><br><span class="line"><span class="string">          git -c &quot;http.extraheader=$auth_header&quot; -c protocol.version=2 submodule update --init --force --recursive --depth=1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Hexo</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">          <span class="attr">HEXO_DEPLOY_PRI:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.HEXO_DEPLOY_PRI</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          mkdir -p ~/.ssh/</span></span><br><span class="line"><span class="string">          echo &quot;$HEXO_DEPLOY_PRI&quot; &gt; ~/.ssh/id_rsa</span></span><br><span class="line"><span class="string">          chmod 700 ~/.ssh</span></span><br><span class="line"><span class="string">          chmod 600 ~/.ssh/id_rsa</span></span><br><span class="line"><span class="string">          ssh-keyscan github.com &gt;&gt; ~/.ssh/known_hosts</span></span><br><span class="line"><span class="string">          git config --global user.email &quot;xianrenqh@163.com&quot;</span></span><br><span class="line"><span class="string">          git config --global user.name &quot;xianrenqh&quot;</span></span><br><span class="line"><span class="string">          npm install hexo-cli -g</span></span><br><span class="line"><span class="string">          npm install yuque-hexo -g</span></span><br><span class="line"><span class="string">          yuque-hexo clean</span></span><br><span class="line"><span class="string">          yuque-hexo sync</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Yuque</span> <span class="comment">#更新yuque 拉取的文章到GitHub仓库</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          git config --global user.email &quot;xianrenqh@163.com&quot;</span></span><br><span class="line"><span class="string">          git config --global user.name &quot;xianrenqh&quot;</span></span><br><span class="line"><span class="string">          git add .</span></span><br><span class="line"><span class="string">          git commit -m &quot;Refresh yuque json&quot; -a</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Push</span> <span class="string">Yuque</span> <span class="comment">#推送修改后的yuque json</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">ad-m/github-push-action@master</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">github_token:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.GE_TOKEN</span> <span class="string">&#125;&#125;</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Cache</span> <span class="string">Hexo</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/cache@v1</span></span><br><span class="line">        <span class="attr">id:</span> <span class="string">cache</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">node_modules</span></span><br><span class="line">          <span class="attr">key:</span> <span class="string">$&#123;&#123;runner.OS&#125;&#125;-$&#123;&#123;hashFiles(&#x27;**/package-lock.json&#x27;)&#125;&#125;</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">dependencies</span></span><br><span class="line">        <span class="attr">if:</span> <span class="string">steps.cache.outputs.cache-hit</span> <span class="type">!=</span> <span class="string">&#x27;true&#x27;</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          npm install --save</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Hexo</span> <span class="string">Deploy</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          hexo clean</span></span><br><span class="line"><span class="string">          hexo generate</span></span><br><span class="line"><span class="string">          hexo deploy</span></span><br></pre></td></tr></table></figure><p>下面那个 user.name 和 user.email 根据自己的情况改一下，注意对齐<br>弄完之后每当 push 或 repository_dispatch 的时候都会自动的进行更新</p><h1 id="四、配置-ServerLess-云函数"><a href="#四、配置-ServerLess-云函数" class="headerlink" title="四、配置 ServerLess 云函数"></a>四、配置 ServerLess 云函数</h1><p><a href="https://www.yuque.com/xianrenqh/kyeqhg/awh8vd?view=doc_embed">Github Action 使用云函数调度服务</a></p><h1 id="五、发布博文到服务器（vps）上"><a href="#五、发布博文到服务器（vps）上" class="headerlink" title="五、发布博文到服务器（vps）上"></a>五、发布博文到服务器（vps）上</h1><p>小灰灰使用的是 webhooks 的功能同步推送到服务器上的</p><h1 id="⑥、PS："><a href="#⑥、PS：" class="headerlink" title="⑥、PS："></a>⑥、PS：</h1><p>小灰灰的 Hexo 博客地址：<br><a href="https://www.xiaohuihui.net/">https://www.xiaohuihui.net</a></p><p>听说使用 github action 执行 ssh 可能会出现封号的情况，所以小灰灰的博客代码直接使用自己的服务器搭建的，然后加个 webhook 到语雀上，这样语雀更新之后请求 webhook 执行命令直接在服务器上更新了。<br>宝塔的 webhook 代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">echo &quot;&quot;</span><br><span class="line">#输出当前时间</span><br><span class="line">date --date=&#x27;0 days ago&#x27; &quot;+%Y-%m-%d %H:%M:%S&quot;</span><br><span class="line">echo &quot;Start&quot;</span><br><span class="line">cd &quot;/www/wwwroot/你的hexo源码地址&quot;</span><br><span class="line"></span><br><span class="line">echo &quot;清除缓存&quot;</span><br><span class="line">#npx hexo clean</span><br><span class="line"></span><br><span class="line">echo &quot;开始下载语雀文章.....&quot;</span><br><span class="line">npx yuque-hexo sync</span><br><span class="line"></span><br><span class="line">echo &quot;创建文章&quot;</span><br><span class="line">npx hexo g</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">echo &quot;完成&quot;</span><br><span class="line">exit</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学无止境 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 云函数 </tag>
            
            <tag> hexo </tag>
            
            <tag> 语雀 </tag>
            
            <tag> 自动发布 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github Action 使用云函数调度服务</title>
      <link href="/posts/3c85ac91.html"/>
      <url>/posts/3c85ac91.html</url>
      
        <content type="html"><![CDATA[<h2 id="如何开启-GitHubAction-的-workflow-dispatch-触发器"><a href="#如何开启-GitHubAction-的-workflow-dispatch-触发器" class="headerlink" title="如何开启 GitHubAction 的 workflow_dispatch 触发器"></a>如何开启 GitHubAction 的 workflow_dispatch 触发器</h2><p>在工作流的 <strong>yml</strong> 文件定义的 <strong>on</strong> 中，提供 workflow_dispatch 触发器 【必须】</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#通过 workflow_dispatch 触发，cron任务部署在云函数</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">你的工作流名称</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">workflow_dispatch:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">start:</span></span><br><span class="line"><span class="comment">#以下省略</span></span><br></pre></td></tr></table></figure><p>开启 workflow_dispatch 后，你的工作流中会出现运行工作流的按钮,手动点击 Run workflow 按钮，将会执行一次工作流：<br><img src="https://cdn.nlark.com/yuque/0/2022/png/27022430/1649390027837-ee2a2970-3e9f-4557-984b-a7c403e9693c.png#clientId=u382e8e49-5c96-4&crop=0&crop=0&crop=1&crop=1&from=paste&id=u5a24dfb6&margin=%5Bobject%20Object%5D&name=image.png&originHeight=266&originWidth=1253&originalType=url%E2%88%B6=1&rotation=0&showTitle=false&size=40929&status=done&style=none&taskId=u8795a4a8-3e99-4e80-8dcd-61142d8fc6c&title=" alt="image.png"></p><p>现在可以进入下一步，使用 <strong>cron</strong> 调度触发工作流的手动执行。</p><h2 id="使用云函数提供-cron-调度服务"><a href="#使用云函数提供-cron-调度服务" class="headerlink" title="使用云函数提供 cron 调度服务"></a>使用云函数提供 cron 调度服务</h2><p>工具的选择上，人们总是会选择便捷且有效。如果恰好是免费的，那就大快人心。<br>我选择的 <strong>cron</strong> 调度是 <a href="https://cloud.tencent.com/product/scf/">腾讯云函数 SCF</a>.。简单的 POST 一个链接，不会达到收费标准。<br>我们打开云函数的创建界面：</p><ol><li>选择自定义创建</li><li>函数名称为默认的 helloworld-1623250991 ，可以自己输入名称。</li><li>地域使用任何地域即可，这里默认选择了广州</li><li>运行环境选择 Python3.6 （Python 2.7 版本也行）</li><li>提交方法选择在线编辑。</li><li>执行方法使用默认值：index.main_handler</li><li>函数代码如下：</li></ol><p><strong>Python 2.7 版本代码：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf8 -*-</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main_handler</span>(<span class="params">event, context</span>):</span><br><span class="line">    r = requests.post(<span class="string">&quot;https://api.github.com/repos/xianrenqh/hui_blog_hexo/actions/workflows/23465728/dispatches&quot;</span>,</span><br><span class="line">    json = &#123;<span class="string">&quot;ref&quot;</span>: <span class="string">&quot;master&quot;</span>&#125;,</span><br><span class="line">    headers = &#123;<span class="string">&quot;User-Agent&quot;</span>:<span class="string">&#x27;curl/7.52.1&#x27;</span>,</span><br><span class="line">              <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>,</span><br><span class="line">              <span class="string">&#x27;Accept&#x27;</span>: <span class="string">&#x27;application/vnd.github.v3+json&#x27;</span>,</span><br><span class="line">              <span class="string">&#x27;Authorization&#x27;</span>: <span class="string">&#x27;token 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&#x27;</span>&#125;)</span><br><span class="line">    <span class="keyword">if</span> r.status_code == <span class="number">204</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;This&#x27;s OK!&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> r.status_code</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>Python 3.6 版本代码：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">run</span>():</span><br><span class="line">        payload = json.dumps(&#123;<span class="string">&quot;ref&quot;</span>: <span class="string">&quot;master&quot;</span>&#125;)</span><br><span class="line">        header = &#123;<span class="string">&#x27;Authorization&#x27;</span>: <span class="string">&#x27;token GitHubToken&#x27;</span>,</span><br><span class="line">                  <span class="string">&quot;Accept&quot;</span>: <span class="string">&quot;application/vnd.github.v3+json&quot;</span>&#125;</span><br><span class="line">        response_decoded_json = requests.post(</span><br><span class="line">            <span class="string">f&#x27;https://api.github.com/repos/Github账号/Github项目名/actions/workflows/GithubAction工作流名称或ID/dispatches&#x27;</span>,</span><br><span class="line">            data=payload, headers=header)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 云函数入口</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main_handler</span>(<span class="params">event, context</span>):</span><br><span class="line">    <span class="keyword">return</span> run()</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="8"><li>函数代码中的 <strong>GitHubToken、Github 账号、Github 项目名、GithubAction 工作流名称或 ID</strong> 需要根据自己的账号及项目填写。具体的 API 调用规则可参考: <a href="https://docs.github.com/en/rest/reference/actions#create-a-workflow-dispatch-event">GithubDoc</a>.</li></ol><p><strong>获取 GithubAction 工作流 ID 接口：</strong><br>**url: **<a href="https://api.github.com/repos/%E4%BD%A0%E7%9A%84%E7%94%A8%E6%88%B7%E5%90%8D/%E4%BD%A0%E7%9A%84%E9%A1%B9%E7%9B%AE%E5%90%8D/actions/workflows">https://api.github.com/repos/你的用户名/你的项目名/actions/workflows</a><br>method: get<br>header:</p><table><thead><tr><th>Authorization</th><th>token 你的 token</th></tr></thead><tbody><tr><td>Accept</td><td>application&#x2F;vnd.github.v3+json</td></tr></tbody></table><p>body: {ref:master’}</p><p><strong>PHP 请求案例：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Generated by ApiPost: https://www.apipost.cn/</span></span><br><span class="line"><span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="string">&#x27;https://api.github.com/repos/你的用户名/你的项目名/actions/workflows&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_CUSTOMREQUEST, <span class="string">&#x27;GET&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="string">&quot;&#123;ref:master&#x27;&#125;&#x27;&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$headers</span> = <span class="keyword">array</span>();</span><br><span class="line"><span class="variable">$headers</span>[] = <span class="string">&#x27;User-Agent: Apipost client Runtime/+https://www.apipost.cn/&#x27;</span>;</span><br><span class="line"><span class="variable">$headers</span>[] = <span class="string">&#x27;Authorization: token 你的TOKEN&#x27;</span>;</span><br><span class="line"><span class="variable">$headers</span>[] = <span class="string">&#x27;Accept: application/vnd.github.v3+json&#x27;</span>;</span><br><span class="line"><span class="variable">$headers</span>[] = <span class="string">&#x27;Content-Type: application/json&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HTTPHEADER, <span class="variable">$headers</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$result</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">curl_errno</span>(<span class="variable">$ch</span>)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Error:&#x27;</span> . <span class="title function_ invoke__">curl_error</span>(<span class="variable">$ch</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Python 请求案例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Apipost client Runtime/+https://www.apipost.cn/&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Authorization&#x27;</span>: <span class="string">&#x27;token 你的token&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Accept&#x27;</span>: <span class="string">&#x27;application/vnd.github.v3+json&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">data = <span class="string">&#x27;&#123;ref:master&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line">response = requests.post(<span class="string">&#x27;https://api.github.com/repos/你的用户名/你的项目名/actions/workflows&#x27;</span>, headers=headers, data=data)</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="9"><li>具体填写如下图所示：</li></ol><p><img src="https://cdn.nlark.com/yuque/0/2022/png/27022430/1649401818211-43e43680-9183-420c-af31-9011030b7073.png#clientId=ufda8d8b7-9673-4&crop=0&crop=0&crop=1&crop=1&from=ui&id=u6ebd4bae&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1204&originWidth=1642&originalType=binary%E2%88%B6=1&rotation=0&showTitle=false&size=156866&status=done&style=none&taskId=uf157aaf6-4213-4b8f-a03f-0a14cc3be20&title=" alt="image.png"></p><ol start="10"><li>在高级配置中，将执行超过时间设置为合适的时间，这里我设置为最大值<strong>900</strong>秒：</li></ol><p><img src="https://cdn.nlark.com/yuque/0/2022/png/27022430/1649390134784-9f7e3870-5676-4dab-b85e-fffd90989239.png#clientId=u382e8e49-5c96-4&crop=0&crop=0&crop=1&crop=1&from=paste&id=ua156c086&margin=%5Bobject%20Object%5D&name=image.png&originHeight=424&originWidth=527&originalType=url%E2%88%B6=1&rotation=0&showTitle=false&size=37309&status=done&style=none&taskId=u1a87cab6-45c8-4639-900e-a9517e8d1a8&title=" alt="image.png"></p><ol start="11"><li>触发器配置选择默认流量 - 定时触发 - 自定义触发周期，并填入合适的 Cron 表达式，这里的<strong>Cron</strong>当前以 UTC +8 中国标准时间 （China Standard Time）运行，即北京时间。我输入的：<blockquote><p>0 0 16 * * * *</p></blockquote></li></ol><p>表示了每天 16 点执行 1 次。<br><img src="https://cdn.nlark.com/yuque/0/2022/png/27022430/1649390185893-a04dcb9c-cb6d-4c29-825e-91b9c250b807.png#clientId=u382e8e49-5c96-4&crop=0&crop=0&crop=1&crop=1&from=paste&id=ud642effb&margin=%5Bobject%20Object%5D&name=image.png&originHeight=517&originWidth=576&originalType=url%E2%88%B6=1&rotation=0&showTitle=false&size=50170&status=done&style=none&taskId=u81d4f3b3-5f0e-4f8c-a2a4-7ca54a07540&title=" alt="image.png"></p><p>触发器也可以选择 api 调用，创建好后会生成一个 api url （webhook 地址）。粘贴到对应的位置调用即可。</p>]]></content>
      
      
      <categories>
          
          <category> 学无止境 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> action </tag>
            
            <tag> 云函数 </tag>
            
            <tag> 调度 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小灰灰博客hexo版本上线了</title>
      <link href="/posts/f6467537.html"/>
      <url>/posts/f6467537.html</url>
      
        <content type="html"><![CDATA[<h3 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h3><p><strong>首发镇博~~~</strong></p><p>上线时间：2022-04-07 12:00:00</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/27022430/1649412642465-cba1fe67-6bcd-4869-82b3-115486a6eb3a.png#clientId=u7f87a94d-b3a6-4&crop=0&crop=0&crop=1&crop=1&from=paste&id=u05c878ee&margin=%5Bobject%20Object%5D&name=image.png&originHeight=351&originWidth=657&originalType=url%E2%88%B6=1&rotation=0&showTitle=false&size=83954&status=done&style=none&taskId=u8cbb1d27-73c6-4361-91bd-d6f58bc7509&title=" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 网络集锦 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> 小灰灰 </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
